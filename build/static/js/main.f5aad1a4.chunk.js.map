{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","ClassName","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCcMK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKIC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKC,UAAU,MAAf,SACC,uBACCX,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAYJ,OCCDK,G,MARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,aCwCKC,E,kDAtCd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEhB,YAAae,EAAME,OAAOC,SAd1C,EAAKC,MAAQ,CACZxB,OAAQ,GACRK,YAAa,IAJD,E,gEASO,IAAD,OACnBoB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAErB,OAAQ6B,S,+BAO/B,IAAD,EACuBC,KAAKN,MAA5BxB,EADA,EACAA,OAAQK,EADR,EACQA,YACV0B,EAAiB/B,EAAOgC,QAAO,SAAAC,GACpC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS9B,EAAY6B,kBAEtD,OAAQlC,EAAOoC,OAGd,sBAAKxC,UAAW,KAAhB,UACC,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWU,aAAcwB,KAAKX,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUnB,OAAQ+B,SANrB,6C,GA1BgBM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5aad1a4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\treturn (\n\t\t<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n \t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n \t\t\t<div>\n \t\t\t\t<h2>{name}</h2>\n \t\t\t\t<p>{email}</p>\n \t\t\t</div>\n\t\t</div>\n\t\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<div>\n\t\t{\n\t\t\trobots.map((user, i) => {\n\t\t\t\treturn(\n\t\t\t\t\t<Card \n\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n  \t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\treturn (\n\t\t<div ClassName='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 bg-lightest-blue ba b--green' \n\t\t\t\ttype='search' \t\n\t\t\t\tplaceholder='search robots' \n\t\t\t\tonChange = {searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>{\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;\n\n","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response=> response.json())\n\t\t\t.then(users => this.setState({ robots: users}));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value }) \n\t}\n\n\trender() {\n\t\tconst { robots, searchfield} = this.state;\n\t\tconst filteredRobots = robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase()); \n\t\t})\n\t\treturn !robots.length ?\n\t\t<h1>Loading</h1> :\n\t\t(\n\t\t\t<div className ='tc'>\n\t\t\t\t<h1 className ='f1'>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}